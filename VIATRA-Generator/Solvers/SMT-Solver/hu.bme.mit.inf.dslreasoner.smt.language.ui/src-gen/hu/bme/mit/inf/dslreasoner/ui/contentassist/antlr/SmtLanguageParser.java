/*
* generated by Xtext
*/
package hu.bme.mit.inf.dslreasoner.ui.contentassist.antlr;

import java.util.Collection;
import java.util.Map;
import java.util.HashMap;

import org.antlr.runtime.RecognitionException;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ui.editor.contentassist.antlr.AbstractContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.FollowElement;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;

import com.google.inject.Inject;

import hu.bme.mit.inf.dslreasoner.services.SmtLanguageGrammarAccess;

public class SmtLanguageParser extends AbstractContentAssistParser {
	
	@Inject
	private SmtLanguageGrammarAccess grammarAccess;
	
	private Map<AbstractElement, String> nameMappings;
	
	@Override
	protected hu.bme.mit.inf.dslreasoner.ui.contentassist.antlr.internal.InternalSmtLanguageParser createParser() {
		hu.bme.mit.inf.dslreasoner.ui.contentassist.antlr.internal.InternalSmtLanguageParser result = new hu.bme.mit.inf.dslreasoner.ui.contentassist.antlr.internal.InternalSmtLanguageParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}
	
	@Override
	protected String getRuleName(AbstractElement element) {
		if (nameMappings == null) {
			nameMappings = new HashMap<AbstractElement, String>() {
				private static final long serialVersionUID = 1L;
				{
					put(grammarAccess.getSMTInputAccess().getAlternatives_1(), "rule__SMTInput__Alternatives_1");
					put(grammarAccess.getSMTOutputAccess().getAlternatives_0(), "rule__SMTOutput__Alternatives_0");
					put(grammarAccess.getSMTTypeAccess().getAlternatives(), "rule__SMTType__Alternatives");
					put(grammarAccess.getSMTTypeReferenceAccess().getAlternatives(), "rule__SMTTypeReference__Alternatives");
					put(grammarAccess.getSMTPrimitiveTypeReferenceAccess().getAlternatives(), "rule__SMTPrimitiveTypeReference__Alternatives");
					put(grammarAccess.getSMTTermAccess().getAlternatives(), "rule__SMTTerm__Alternatives");
					put(grammarAccess.getSMTSymbolicDeclarationAccess().getAlternatives(), "rule__SMTSymbolicDeclaration__Alternatives");
					put(grammarAccess.getSMTSymbolicValueAccess().getAlternatives(), "rule__SMTSymbolicValue__Alternatives");
					put(grammarAccess.getSMTAtomicTermAccess().getAlternatives(), "rule__SMTAtomicTerm__Alternatives");
					put(grammarAccess.getBOOLEANTERMINALAccess().getAlternatives(), "rule__BOOLEANTERMINAL__Alternatives");
					put(grammarAccess.getSMTQuantifiedExpressionAccess().getAlternatives(), "rule__SMTQuantifiedExpression__Alternatives");
					put(grammarAccess.getSMTExistsAccess().getAlternatives_5(), "rule__SMTExists__Alternatives_5");
					put(grammarAccess.getSMTForallAccess().getAlternatives_5(), "rule__SMTForall__Alternatives_5");
					put(grammarAccess.getSMTBoolOperationAccess().getAlternatives(), "rule__SMTBoolOperation__Alternatives");
					put(grammarAccess.getSMTRelationAccess().getAlternatives(), "rule__SMTRelation__Alternatives");
					put(grammarAccess.getSMTIntOperationAccess().getAlternatives(), "rule__SMTIntOperation__Alternatives");
					put(grammarAccess.getSMTCardinalityConstraintAccess().getAlternatives_8(), "rule__SMTCardinalityConstraint__Alternatives_8");
					put(grammarAccess.getSMTSatCommandAccess().getAlternatives(), "rule__SMTSatCommand__Alternatives");
					put(grammarAccess.getSMTReasoningTacticAccess().getAlternatives(), "rule__SMTReasoningTactic__Alternatives");
					put(grammarAccess.getSMTReasoningCombinatorAccess().getAlternatives(), "rule__SMTReasoningCombinator__Alternatives");
					put(grammarAccess.getSMTUsingParamCombinatorAccess().getAlternatives_1(), "rule__SMTUsingParamCombinator__Alternatives_1");
					put(grammarAccess.getSMTResultAccess().getAlternatives(), "rule__SMTResult__Alternatives");
					put(grammarAccess.getSMTSatResultAccess().getAlternatives(), "rule__SMTSatResult__Alternatives");
					put(grammarAccess.getSMTModelResultAccess().getAlternatives_3(), "rule__SMTModelResult__Alternatives_3");
					put(grammarAccess.getSMTStatisticValueAccess().getAlternatives(), "rule__SMTStatisticValue__Alternatives");
					put(grammarAccess.getSMTDocumentAccess().getGroup(), "rule__SMTDocument__Group__0");
					put(grammarAccess.getSMTDocumentAccess().getGroup_1(), "rule__SMTDocument__Group_1__0");
					put(grammarAccess.getSMTInputAccess().getGroup(), "rule__SMTInput__Group__0");
					put(grammarAccess.getSMTOutputAccess().getGroup(), "rule__SMTOutput__Group__0");
					put(grammarAccess.getSMTOutputAccess().getGroup_0_0(), "rule__SMTOutput__Group_0_0__0");
					put(grammarAccess.getSMTOutputAccess().getGroup_0_1(), "rule__SMTOutput__Group_0_1__0");
					put(grammarAccess.getSMTOptionAccess().getGroup(), "rule__SMTOption__Group__0");
					put(grammarAccess.getSMTEnumeratedTypeDeclarationAccess().getGroup(), "rule__SMTEnumeratedTypeDeclaration__Group__0");
					put(grammarAccess.getSMTSetTypeDeclarationAccess().getGroup(), "rule__SMTSetTypeDeclaration__Group__0");
					put(grammarAccess.getSMTIntTypeReferenceAccess().getGroup(), "rule__SMTIntTypeReference__Group__0");
					put(grammarAccess.getSMTBoolTypeReferenceAccess().getGroup(), "rule__SMTBoolTypeReference__Group__0");
					put(grammarAccess.getSMTRealTypeReferenceAccess().getGroup(), "rule__SMTRealTypeReference__Group__0");
					put(grammarAccess.getSMTFunctionDeclarationAccess().getGroup(), "rule__SMTFunctionDeclaration__Group__0");
					put(grammarAccess.getSMTFunctionDefinitionAccess().getGroup(), "rule__SMTFunctionDefinition__Group__0");
					put(grammarAccess.getSMTSymbolicValueAccess().getGroup_0(), "rule__SMTSymbolicValue__Group_0__0");
					put(grammarAccess.getSMTSortedVariableAccess().getGroup(), "rule__SMTSortedVariable__Group__0");
					put(grammarAccess.getSMTExistsAccess().getGroup(), "rule__SMTExists__Group__0");
					put(grammarAccess.getSMTExistsAccess().getGroup_5_1(), "rule__SMTExists__Group_5_1__0");
					put(grammarAccess.getSMTForallAccess().getGroup(), "rule__SMTForall__Group__0");
					put(grammarAccess.getSMTForallAccess().getGroup_5_1(), "rule__SMTForall__Group_5_1__0");
					put(grammarAccess.getSMTAndAccess().getGroup(), "rule__SMTAnd__Group__0");
					put(grammarAccess.getSMTOrAccess().getGroup(), "rule__SMTOr__Group__0");
					put(grammarAccess.getSMTImplAccess().getGroup(), "rule__SMTImpl__Group__0");
					put(grammarAccess.getSMTNotAccess().getGroup(), "rule__SMTNot__Group__0");
					put(grammarAccess.getSMTIffAccess().getGroup(), "rule__SMTIff__Group__0");
					put(grammarAccess.getSMTITEAccess().getGroup(), "rule__SMTITE__Group__0");
					put(grammarAccess.getSMTLetAccess().getGroup(), "rule__SMTLet__Group__0");
					put(grammarAccess.getSMTInlineConstantDefinitionAccess().getGroup(), "rule__SMTInlineConstantDefinition__Group__0");
					put(grammarAccess.getSMTEqualsAccess().getGroup(), "rule__SMTEquals__Group__0");
					put(grammarAccess.getSMTDistinctAccess().getGroup(), "rule__SMTDistinct__Group__0");
					put(grammarAccess.getSMTLTAccess().getGroup(), "rule__SMTLT__Group__0");
					put(grammarAccess.getSMTMTAccess().getGroup(), "rule__SMTMT__Group__0");
					put(grammarAccess.getSMTLEQAccess().getGroup(), "rule__SMTLEQ__Group__0");
					put(grammarAccess.getSMTMEQAccess().getGroup(), "rule__SMTMEQ__Group__0");
					put(grammarAccess.getSMTPlusAccess().getGroup(), "rule__SMTPlus__Group__0");
					put(grammarAccess.getSMTMinusAccess().getGroup(), "rule__SMTMinus__Group__0");
					put(grammarAccess.getSMTMultiplyAccess().getGroup(), "rule__SMTMultiply__Group__0");
					put(grammarAccess.getSMTDivisonAccess().getGroup(), "rule__SMTDivison__Group__0");
					put(grammarAccess.getSMTDivAccess().getGroup(), "rule__SMTDiv__Group__0");
					put(grammarAccess.getSMTModAccess().getGroup(), "rule__SMTMod__Group__0");
					put(grammarAccess.getSMTAssertionAccess().getGroup(), "rule__SMTAssertion__Group__0");
					put(grammarAccess.getSMTCardinalityConstraintAccess().getGroup(), "rule__SMTCardinalityConstraint__Group__0");
					put(grammarAccess.getSMTCardinalityConstraintAccess().getGroup_8_0(), "rule__SMTCardinalityConstraint__Group_8_0__0");
					put(grammarAccess.getSMTCardinalityConstraintAccess().getGroup_8_0_2(), "rule__SMTCardinalityConstraint__Group_8_0_2__0");
					put(grammarAccess.getSMTCardinalityConstraintAccess().getGroup_8_1(), "rule__SMTCardinalityConstraint__Group_8_1__0");
					put(grammarAccess.getSMTSimpleSatCommandAccess().getGroup(), "rule__SMTSimpleSatCommand__Group__0");
					put(grammarAccess.getSMTComplexSatCommandAccess().getGroup(), "rule__SMTComplexSatCommand__Group__0");
					put(grammarAccess.getSMTGetModelCommandAccess().getGroup(), "rule__SMTGetModelCommand__Group__0");
					put(grammarAccess.getSMTAndThenCombinatorAccess().getGroup(), "rule__SMTAndThenCombinator__Group__0");
					put(grammarAccess.getSMTOrElseCombinatorAccess().getGroup(), "rule__SMTOrElseCombinator__Group__0");
					put(grammarAccess.getSMTParOrCombinatorAccess().getGroup(), "rule__SMTParOrCombinator__Group__0");
					put(grammarAccess.getSMTParThenCombinatorAccess().getGroup(), "rule__SMTParThenCombinator__Group__0");
					put(grammarAccess.getSMTTryForCombinatorAccess().getGroup(), "rule__SMTTryForCombinator__Group__0");
					put(grammarAccess.getSMTIfCombinatorAccess().getGroup(), "rule__SMTIfCombinator__Group__0");
					put(grammarAccess.getSMTWhenCombinatorAccess().getGroup(), "rule__SMTWhenCombinator__Group__0");
					put(grammarAccess.getSMTFailIfCombinatorAccess().getGroup(), "rule__SMTFailIfCombinator__Group__0");
					put(grammarAccess.getSMTUsingParamCombinatorAccess().getGroup(), "rule__SMTUsingParamCombinator__Group__0");
					put(grammarAccess.getReasoningTacticParameterAccess().getGroup(), "rule__ReasoningTacticParameter__Group__0");
					put(grammarAccess.getSMTErrorResultAccess().getGroup(), "rule__SMTErrorResult__Group__0");
					put(grammarAccess.getSMTUnsupportedResultAccess().getGroup(), "rule__SMTUnsupportedResult__Group__0");
					put(grammarAccess.getSMTModelResultAccess().getGroup(), "rule__SMTModelResult__Group__0");
					put(grammarAccess.getSMTStatisticIntValueAccess().getGroup(), "rule__SMTStatisticIntValue__Group__0");
					put(grammarAccess.getSMTStatisticDoubleValueAccess().getGroup(), "rule__SMTStatisticDoubleValue__Group__0");
					put(grammarAccess.getSMTStatisticsSectionAccess().getGroup(), "rule__SMTStatisticsSection__Group__0");
					put(grammarAccess.getSMTDocumentAccess().getInputAssignment_0(), "rule__SMTDocument__InputAssignment_0");
					put(grammarAccess.getSMTDocumentAccess().getOutputAssignment_1_1(), "rule__SMTDocument__OutputAssignment_1_1");
					put(grammarAccess.getSMTInputAccess().getOptionsAssignment_0(), "rule__SMTInput__OptionsAssignment_0");
					put(grammarAccess.getSMTInputAccess().getTypeDeclarationsAssignment_1_0(), "rule__SMTInput__TypeDeclarationsAssignment_1_0");
					put(grammarAccess.getSMTInputAccess().getFunctionDeclarationsAssignment_1_1(), "rule__SMTInput__FunctionDeclarationsAssignment_1_1");
					put(grammarAccess.getSMTInputAccess().getFunctionDefinitionAssignment_1_2(), "rule__SMTInput__FunctionDefinitionAssignment_1_2");
					put(grammarAccess.getSMTInputAccess().getAssertionsAssignment_1_3(), "rule__SMTInput__AssertionsAssignment_1_3");
					put(grammarAccess.getSMTInputAccess().getSatCommandAssignment_2(), "rule__SMTInput__SatCommandAssignment_2");
					put(grammarAccess.getSMTInputAccess().getGetModelCommandAssignment_3(), "rule__SMTInput__GetModelCommandAssignment_3");
					put(grammarAccess.getSMTOutputAccess().getSatResultAssignment_0_0_0(), "rule__SMTOutput__SatResultAssignment_0_0_0");
					put(grammarAccess.getSMTOutputAccess().getGetModelResultAssignment_0_0_1(), "rule__SMTOutput__GetModelResultAssignment_0_0_1");
					put(grammarAccess.getSMTOutputAccess().getStatisticsAssignment_1(), "rule__SMTOutput__StatisticsAssignment_1");
					put(grammarAccess.getSMTOptionAccess().getNameAssignment_2(), "rule__SMTOption__NameAssignment_2");
					put(grammarAccess.getSMTOptionAccess().getValueAssignment_3(), "rule__SMTOption__ValueAssignment_3");
					put(grammarAccess.getSMTEnumLiteralAccess().getNameAssignment(), "rule__SMTEnumLiteral__NameAssignment");
					put(grammarAccess.getSMTEnumeratedTypeDeclarationAccess().getNameAssignment_6(), "rule__SMTEnumeratedTypeDeclaration__NameAssignment_6");
					put(grammarAccess.getSMTEnumeratedTypeDeclarationAccess().getElementsAssignment_7(), "rule__SMTEnumeratedTypeDeclaration__ElementsAssignment_7");
					put(grammarAccess.getSMTSetTypeDeclarationAccess().getNameAssignment_2(), "rule__SMTSetTypeDeclaration__NameAssignment_2");
					put(grammarAccess.getSMTComplexTypeReferenceAccess().getReferredAssignment(), "rule__SMTComplexTypeReference__ReferredAssignment");
					put(grammarAccess.getSMTFunctionDeclarationAccess().getNameAssignment_2(), "rule__SMTFunctionDeclaration__NameAssignment_2");
					put(grammarAccess.getSMTFunctionDeclarationAccess().getParametersAssignment_4(), "rule__SMTFunctionDeclaration__ParametersAssignment_4");
					put(grammarAccess.getSMTFunctionDeclarationAccess().getRangeAssignment_6(), "rule__SMTFunctionDeclaration__RangeAssignment_6");
					put(grammarAccess.getSMTFunctionDefinitionAccess().getNameAssignment_2(), "rule__SMTFunctionDefinition__NameAssignment_2");
					put(grammarAccess.getSMTFunctionDefinitionAccess().getParametersAssignment_4(), "rule__SMTFunctionDefinition__ParametersAssignment_4");
					put(grammarAccess.getSMTFunctionDefinitionAccess().getRangeAssignment_6(), "rule__SMTFunctionDefinition__RangeAssignment_6");
					put(grammarAccess.getSMTFunctionDefinitionAccess().getValueAssignment_7(), "rule__SMTFunctionDefinition__ValueAssignment_7");
					put(grammarAccess.getSMTSymbolicValueAccess().getSymbolicReferenceAssignment_0_1(), "rule__SMTSymbolicValue__SymbolicReferenceAssignment_0_1");
					put(grammarAccess.getSMTSymbolicValueAccess().getParameterSubstitutionsAssignment_0_2(), "rule__SMTSymbolicValue__ParameterSubstitutionsAssignment_0_2");
					put(grammarAccess.getSMTSymbolicValueAccess().getSymbolicReferenceAssignment_1(), "rule__SMTSymbolicValue__SymbolicReferenceAssignment_1");
					put(grammarAccess.getSMTIntLiteralAccess().getValueAssignment(), "rule__SMTIntLiteral__ValueAssignment");
					put(grammarAccess.getSMTBoolLiteralAccess().getValueAssignment(), "rule__SMTBoolLiteral__ValueAssignment");
					put(grammarAccess.getSMTRealLiteralAccess().getValueAssignment(), "rule__SMTRealLiteral__ValueAssignment");
					put(grammarAccess.getSMTSortedVariableAccess().getNameAssignment_1(), "rule__SMTSortedVariable__NameAssignment_1");
					put(grammarAccess.getSMTSortedVariableAccess().getRangeAssignment_2(), "rule__SMTSortedVariable__RangeAssignment_2");
					put(grammarAccess.getSMTExistsAccess().getQuantifiedVariablesAssignment_3(), "rule__SMTExists__QuantifiedVariablesAssignment_3");
					put(grammarAccess.getSMTExistsAccess().getExpressionAssignment_5_0(), "rule__SMTExists__ExpressionAssignment_5_0");
					put(grammarAccess.getSMTExistsAccess().getExpressionAssignment_5_1_2(), "rule__SMTExists__ExpressionAssignment_5_1_2");
					put(grammarAccess.getSMTExistsAccess().getPatternAssignment_5_1_5(), "rule__SMTExists__PatternAssignment_5_1_5");
					put(grammarAccess.getSMTForallAccess().getQuantifiedVariablesAssignment_3(), "rule__SMTForall__QuantifiedVariablesAssignment_3");
					put(grammarAccess.getSMTForallAccess().getExpressionAssignment_5_0(), "rule__SMTForall__ExpressionAssignment_5_0");
					put(grammarAccess.getSMTForallAccess().getExpressionAssignment_5_1_2(), "rule__SMTForall__ExpressionAssignment_5_1_2");
					put(grammarAccess.getSMTForallAccess().getPatternAssignment_5_1_5(), "rule__SMTForall__PatternAssignment_5_1_5");
					put(grammarAccess.getSMTAndAccess().getOperandsAssignment_2(), "rule__SMTAnd__OperandsAssignment_2");
					put(grammarAccess.getSMTOrAccess().getOperandsAssignment_2(), "rule__SMTOr__OperandsAssignment_2");
					put(grammarAccess.getSMTImplAccess().getLeftOperandAssignment_2(), "rule__SMTImpl__LeftOperandAssignment_2");
					put(grammarAccess.getSMTImplAccess().getRightOperandAssignment_3(), "rule__SMTImpl__RightOperandAssignment_3");
					put(grammarAccess.getSMTNotAccess().getOperandAssignment_2(), "rule__SMTNot__OperandAssignment_2");
					put(grammarAccess.getSMTIffAccess().getLeftOperandAssignment_2(), "rule__SMTIff__LeftOperandAssignment_2");
					put(grammarAccess.getSMTIffAccess().getRightOperandAssignment_3(), "rule__SMTIff__RightOperandAssignment_3");
					put(grammarAccess.getSMTITEAccess().getConditionAssignment_2(), "rule__SMTITE__ConditionAssignment_2");
					put(grammarAccess.getSMTITEAccess().getIfAssignment_3(), "rule__SMTITE__IfAssignment_3");
					put(grammarAccess.getSMTITEAccess().getElseAssignment_4(), "rule__SMTITE__ElseAssignment_4");
					put(grammarAccess.getSMTLetAccess().getInlineConstantDefinitionsAssignment_3(), "rule__SMTLet__InlineConstantDefinitionsAssignment_3");
					put(grammarAccess.getSMTLetAccess().getTermAssignment_5(), "rule__SMTLet__TermAssignment_5");
					put(grammarAccess.getSMTInlineConstantDefinitionAccess().getNameAssignment_1(), "rule__SMTInlineConstantDefinition__NameAssignment_1");
					put(grammarAccess.getSMTInlineConstantDefinitionAccess().getDefinitionAssignment_2(), "rule__SMTInlineConstantDefinition__DefinitionAssignment_2");
					put(grammarAccess.getSMTEqualsAccess().getLeftOperandAssignment_2(), "rule__SMTEquals__LeftOperandAssignment_2");
					put(grammarAccess.getSMTEqualsAccess().getRightOperandAssignment_3(), "rule__SMTEquals__RightOperandAssignment_3");
					put(grammarAccess.getSMTDistinctAccess().getOperandsAssignment_2(), "rule__SMTDistinct__OperandsAssignment_2");
					put(grammarAccess.getSMTLTAccess().getLeftOperandAssignment_2(), "rule__SMTLT__LeftOperandAssignment_2");
					put(grammarAccess.getSMTLTAccess().getRightOperandAssignment_3(), "rule__SMTLT__RightOperandAssignment_3");
					put(grammarAccess.getSMTMTAccess().getLeftOperandAssignment_2(), "rule__SMTMT__LeftOperandAssignment_2");
					put(grammarAccess.getSMTMTAccess().getRightOperandAssignment_3(), "rule__SMTMT__RightOperandAssignment_3");
					put(grammarAccess.getSMTLEQAccess().getLeftOperandAssignment_2(), "rule__SMTLEQ__LeftOperandAssignment_2");
					put(grammarAccess.getSMTLEQAccess().getRightOperandAssignment_3(), "rule__SMTLEQ__RightOperandAssignment_3");
					put(grammarAccess.getSMTMEQAccess().getLeftOperandAssignment_2(), "rule__SMTMEQ__LeftOperandAssignment_2");
					put(grammarAccess.getSMTMEQAccess().getRightOperandAssignment_3(), "rule__SMTMEQ__RightOperandAssignment_3");
					put(grammarAccess.getSMTPlusAccess().getLeftOperandAssignment_2(), "rule__SMTPlus__LeftOperandAssignment_2");
					put(grammarAccess.getSMTPlusAccess().getRightOperandAssignment_3(), "rule__SMTPlus__RightOperandAssignment_3");
					put(grammarAccess.getSMTMinusAccess().getLeftOperandAssignment_2(), "rule__SMTMinus__LeftOperandAssignment_2");
					put(grammarAccess.getSMTMinusAccess().getRightOperandAssignment_3(), "rule__SMTMinus__RightOperandAssignment_3");
					put(grammarAccess.getSMTMultiplyAccess().getLeftOperandAssignment_2(), "rule__SMTMultiply__LeftOperandAssignment_2");
					put(grammarAccess.getSMTMultiplyAccess().getRightOperandAssignment_3(), "rule__SMTMultiply__RightOperandAssignment_3");
					put(grammarAccess.getSMTDivisonAccess().getLeftOperandAssignment_2(), "rule__SMTDivison__LeftOperandAssignment_2");
					put(grammarAccess.getSMTDivisonAccess().getRightOperandAssignment_3(), "rule__SMTDivison__RightOperandAssignment_3");
					put(grammarAccess.getSMTDivAccess().getLeftOperandAssignment_2(), "rule__SMTDiv__LeftOperandAssignment_2");
					put(grammarAccess.getSMTDivAccess().getRightOperandAssignment_3(), "rule__SMTDiv__RightOperandAssignment_3");
					put(grammarAccess.getSMTModAccess().getLeftOperandAssignment_2(), "rule__SMTMod__LeftOperandAssignment_2");
					put(grammarAccess.getSMTModAccess().getRightOperandAssignment_3(), "rule__SMTMod__RightOperandAssignment_3");
					put(grammarAccess.getSMTAssertionAccess().getValueAssignment_2(), "rule__SMTAssertion__ValueAssignment_2");
					put(grammarAccess.getSMTCardinalityConstraintAccess().getTypeAssignment_5(), "rule__SMTCardinalityConstraint__TypeAssignment_5");
					put(grammarAccess.getSMTCardinalityConstraintAccess().getElementsAssignment_8_0_2_3(), "rule__SMTCardinalityConstraint__ElementsAssignment_8_0_2_3");
					put(grammarAccess.getSMTCardinalityConstraintAccess().getElementsAssignment_8_1_3(), "rule__SMTCardinalityConstraint__ElementsAssignment_8_1_3");
					put(grammarAccess.getSMTComplexSatCommandAccess().getMethodAssignment_2(), "rule__SMTComplexSatCommand__MethodAssignment_2");
					put(grammarAccess.getSMTBuiltinTacticAccess().getNameAssignment(), "rule__SMTBuiltinTactic__NameAssignment");
					put(grammarAccess.getSMTAndThenCombinatorAccess().getTacticsAssignment_2(), "rule__SMTAndThenCombinator__TacticsAssignment_2");
					put(grammarAccess.getSMTOrElseCombinatorAccess().getTacticsAssignment_2(), "rule__SMTOrElseCombinator__TacticsAssignment_2");
					put(grammarAccess.getSMTParOrCombinatorAccess().getTacticsAssignment_2(), "rule__SMTParOrCombinator__TacticsAssignment_2");
					put(grammarAccess.getSMTParThenCombinatorAccess().getPreProcessingTacticAssignment_2(), "rule__SMTParThenCombinator__PreProcessingTacticAssignment_2");
					put(grammarAccess.getSMTParThenCombinatorAccess().getParalellyPostpricessingTacticAssignment_3(), "rule__SMTParThenCombinator__ParalellyPostpricessingTacticAssignment_3");
					put(grammarAccess.getSMTTryForCombinatorAccess().getTacticAssignment_2(), "rule__SMTTryForCombinator__TacticAssignment_2");
					put(grammarAccess.getSMTTryForCombinatorAccess().getTimeAssignment_3(), "rule__SMTTryForCombinator__TimeAssignment_3");
					put(grammarAccess.getSMTIfCombinatorAccess().getProbeAssignment_2(), "rule__SMTIfCombinator__ProbeAssignment_2");
					put(grammarAccess.getSMTIfCombinatorAccess().getIfTacticAssignment_3(), "rule__SMTIfCombinator__IfTacticAssignment_3");
					put(grammarAccess.getSMTIfCombinatorAccess().getElseTacticAssignment_4(), "rule__SMTIfCombinator__ElseTacticAssignment_4");
					put(grammarAccess.getSMTWhenCombinatorAccess().getProbeAssignment_2(), "rule__SMTWhenCombinator__ProbeAssignment_2");
					put(grammarAccess.getSMTWhenCombinatorAccess().getTacticAssignment_3(), "rule__SMTWhenCombinator__TacticAssignment_3");
					put(grammarAccess.getSMTFailIfCombinatorAccess().getProbeAssignment_2(), "rule__SMTFailIfCombinator__ProbeAssignment_2");
					put(grammarAccess.getSMTUsingParamCombinatorAccess().getTacticAssignment_2(), "rule__SMTUsingParamCombinator__TacticAssignment_2");
					put(grammarAccess.getSMTUsingParamCombinatorAccess().getParametersAssignment_3(), "rule__SMTUsingParamCombinator__ParametersAssignment_3");
					put(grammarAccess.getReasoningProbeAccess().getNameAssignment(), "rule__ReasoningProbe__NameAssignment");
					put(grammarAccess.getReasoningTacticParameterAccess().getNameAssignment_0(), "rule__ReasoningTacticParameter__NameAssignment_0");
					put(grammarAccess.getReasoningTacticParameterAccess().getValueAssignment_1(), "rule__ReasoningTacticParameter__ValueAssignment_1");
					put(grammarAccess.getSMTErrorResultAccess().getMessageAssignment_2(), "rule__SMTErrorResult__MessageAssignment_2");
					put(grammarAccess.getSMTUnsupportedResultAccess().getCommandAssignment_2(), "rule__SMTUnsupportedResult__CommandAssignment_2");
					put(grammarAccess.getSMTSatResultAccess().getSatAssignment_0(), "rule__SMTSatResult__SatAssignment_0");
					put(grammarAccess.getSMTSatResultAccess().getUnsatAssignment_1(), "rule__SMTSatResult__UnsatAssignment_1");
					put(grammarAccess.getSMTSatResultAccess().getUnknownAssignment_2(), "rule__SMTSatResult__UnknownAssignment_2");
					put(grammarAccess.getSMTModelResultAccess().getNewFunctionDeclarationsAssignment_3_0(), "rule__SMTModelResult__NewFunctionDeclarationsAssignment_3_0");
					put(grammarAccess.getSMTModelResultAccess().getTypeDefinitionsAssignment_3_1(), "rule__SMTModelResult__TypeDefinitionsAssignment_3_1");
					put(grammarAccess.getSMTModelResultAccess().getNewFunctionDefinitionsAssignment_3_2(), "rule__SMTModelResult__NewFunctionDefinitionsAssignment_3_2");
					put(grammarAccess.getSMTStatisticIntValueAccess().getNameAssignment_0(), "rule__SMTStatisticIntValue__NameAssignment_0");
					put(grammarAccess.getSMTStatisticIntValueAccess().getValueAssignment_1(), "rule__SMTStatisticIntValue__ValueAssignment_1");
					put(grammarAccess.getSMTStatisticDoubleValueAccess().getNameAssignment_0(), "rule__SMTStatisticDoubleValue__NameAssignment_0");
					put(grammarAccess.getSMTStatisticDoubleValueAccess().getValueAssignment_1(), "rule__SMTStatisticDoubleValue__ValueAssignment_1");
					put(grammarAccess.getSMTStatisticsSectionAccess().getValuesAssignment_2(), "rule__SMTStatisticsSection__ValuesAssignment_2");
				}
			};
		}
		return nameMappings.get(element);
	}
	
	@Override
	protected Collection<FollowElement> getFollowElements(AbstractInternalContentAssistParser parser) {
		try {
			hu.bme.mit.inf.dslreasoner.ui.contentassist.antlr.internal.InternalSmtLanguageParser typedParser = (hu.bme.mit.inf.dslreasoner.ui.contentassist.antlr.internal.InternalSmtLanguageParser) parser;
			typedParser.entryRuleSMTDocument();
			return typedParser.getFollowElements();
		} catch(RecognitionException ex) {
			throw new RuntimeException(ex);
		}		
	}
	
	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}
	
	public SmtLanguageGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}
	
	public void setGrammarAccess(SmtLanguageGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
}
