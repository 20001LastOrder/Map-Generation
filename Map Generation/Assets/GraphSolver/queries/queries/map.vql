package queries
import epackage "ca.mcgill.ecse459.map"

pattern isIsland(a: Region){
	Island(a);
}

pattern isSea(a: Region){
	Sea(a);
}

pattern isCity(a:Region){
	City(a);
}

pattern isLake(a: Region){
	Lake(a);
}

@Constraint(key={a}, severity="error", message="error")
pattern SeaInside(a: Sea){
	CompositeRegion.insides(a, b);
	neg find isIsland(b);
}

@Constraint(key={a}, severity="error", message="error")
pattern islandInside(a: Island){
	CompositeRegion.insides(a, b);
	neg find isCity(b);
	neg find isLake(b);
}

@Constraint(key={a, b}, severity="error", message="error")
pattern SeaClose(a: Sea, b:Region){
	Region.close(a, b);
}

@Constraint(key={a, b}, severity="error", message="error")
pattern IslandClose(a: Island, b:Region){
	Region.close(a, b);
}

@Constraint(key={a, b}, severity="error", message="error")
pattern LakeClose(a: Lake, b:Region){
	Region.close(a, b);
}

@Constraint(key={a, b}, severity="error", message="error")
pattern cityClose(a:City, b: Region){
	Region.close(a, b);
	neg find isLake(b);
}

